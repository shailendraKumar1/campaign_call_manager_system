# Django Settings
DJANGO_SECRET_KEY=django-insecure-change-this-in-production
DJANGO_DEBUG=true
DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1

# Database Configuration (PostgreSQL)
POSTGRES_DB=campaign_db
POSTGRES_USER=campaign_user
POSTGRES_PASSWORD=yourpassword
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# Redis Configuration (used for caching and Celery broker)
REDIS_URL=redis://127.0.0.1:6379/0

# Celery Configuration (async task processing)
CELERY_BROKER_URL=redis://127.0.0.1:6379/1
CELERY_RESULT_BACKEND=redis://127.0.0.1:6379/2

# Authentication
AUTH_ENABLED=true
X_AUTH_TOKEN=dev-token-12345

# Application Settings
MAX_CONCURRENT_CALLS=100
MAX_RETRY_ATTEMPTS=3
RETRY_SCHEDULE_CONFIG_PATH=config/retry_config.yaml

# Mock Service
MOCK_SERVICE_ENABLED=true
EXTERNAL_CALL_SERVICE_URL=http://localhost:8001

# Scheduler (Retry Processing)
SCHEDULER_ENABLED=true
SCHEDULER_INTERVAL_MINUTES=10  # How often to check for retry calls (in minutes)

# Connection Pooling
DB_CONN_MAX_AGE=600  # PostgreSQL persistent connections lifetime (seconds, 0=disabled, 600=10min)
DB_CONN_HEALTH_CHECKS=true  # Check connection health before using from pool
REDIS_MAX_CONNECTIONS=50  # Redis connection pool size (per worker/process)
CELERY_BROKER_POOL_LIMIT=50  # Celery broker connection pool size

# DLQ Settings
DLQ_RETENTION_DAYS=7

# Concurrency and Duplicate Prevention
REDIS_CONCURRENCY_KEY=active_calls_count
REDIS_DUPLICATE_PREVENTION_PREFIX=call_lock:
DUPLICATE_CALL_WINDOW_MINUTES=5

# Metrics
METRICS_ENABLED=true
METRICS_PORT=8000
